source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
five = 5.00
five
five = 5.01
five
print(paste0("hi",five))
print(cat("hi",five))
print(paste("hi",five))
print(paste("hi",five))
print(paste("hi",five,five))
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
sum(D.1)/sum(N.1)
round(sum(D.1)/sum(N.1),3)
round(sum(D.1)/sum(N.1),2)
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
cfr.out["EM.rel.cfr"]
cfr.out["EM.rel.cfr"][[0]]
cfr.out["EM.rel.cfr"][0]
double(cfr.out["EM.rel.cfr"])
double(cfr.out["EM.rel.cfr"])
cfr.out["EM.rel.cfr"][0]
cfr.out["EM.rel.cfr"]
cfr.out["EM.rel.cfr"][[1]]
cfr.out["EM.rel.cfr"][[[1]]]
cfr.out["EM.rel.cfr"][[1]]
print(paste("the",cfr.out["EM.rel.cfr"][[1]]))
print(paste("the",round(cfr.out["EM.rel.cfr"][[1]],2))
)
print(paste("the",round(cfr.out["EM.rel.cfr"][[1]],2)))
print(paste("the",round(cfr.out["EM.rel.cfr"],2)))
print(paste("the",round(cfr.out["EM.rel.cfr"][1],2)))
print(paste("the",round(cfr.out["EM.rel.cfr"][[1]],2)))
print(paste("CFR of",COUNTRY2,"compared to",COUNTRY1,"! Naive:",round(sum(D.2)*sum(N.1)/sum(N.2)/sum(D.1),2),"Observed:",round(sum(D.2)*sum(D.1+R.1)/sum(D.2+R.2)/sum(D.1),2),"Reich:",round(cfr.out["EM.rel.cfr"][[1]],2)))
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
# If you want the program to try and continue past my asserts, set ASSERT_STOP to FALSE.
# Note with DESIRED_L:
#DESIRED_L = Length of the tail of the death distribution, in days. If DESIRED_L is greater than the length of the outbreak (starting at the first index with min.cases), then you will get an error.
#MTTD = Mean Time To Death
#STD = Standard deviation of distribution
relative_cfr <- function(COUNTRY1,COUNTRY2, min.cases=40, realign=FALSE, ASSERT_STOP=FALSE, DESIRED_L=25, MTTD=15, STD=6.9, MAXITERS=10000) {
library("dplyr")
library("RcppCNPy")
source("./reich/CFR_estimation.R")
source("./R/jh_process.R")
source("./R/generate_coronamat.R")
source("./R/reindex_time.R")
source("./R/myassert.R")
set.seed(0) #For reproducibility. Can be changed without affecting anything.
# Changing the distribution of deaths can have a large effect especially in the low data regime.
assumed.nu=dgamma(1:DESIRED_L, shape=MTTD^2/STD^2, scale=STD^2/MTTD)
assumed.nu[assumed.nu<=0.01]=0
assumed.nu = assumed.nu/sum(assumed.nu)
assert("ERROR: The assumed distribution of deaths in time contains all zeros. Make sure the MTTD is within the range 1:DESIRED_L.",!any(is.nan(assumed.nu)))
data = generate_coronamat(COUNTRY1,COUNTRY2,DESIRED_L+2, min.cases=min.cases, realign=TRUE)
#data [,"N"] = data[,"R"] + data[,"D"]  # Use this if you only want to consider recovered and deaths (not recommended)
# This code fixes some errors in the JHU dataset (negative entries, all-zero rows).
data = reindex_time(data,DESIRED_L)["data"][[1]]
data = data[ ((data[,"N"] > 0) | is.na(data[,"new.times"])) & (data[,"D"]>=0),  ]
data = data[,-6]
out_list = reindex_time(data,DESIRED_L)
data = out_list["data"][[1]]
T = out_list["T"][[1]]
first.t = out_list["first.t"][[1]]
last.t = out_list["last.t"][[1]]
total_time = dim(data)[1]/2
alpha.start <- 5*runif(T-1)
## caution! this next line may take several minutes (5-10, depanding on
## the speed of your machine) to run.
cfr.out <- EMforCFR(assumed.nu = assumed.nu,
alpha.start.values = alpha.start,
full.data = data,
verb = FALSE,
SEM.var = TRUE,
max.iter = MAXITERS,
tol = 1e-04)
theta <- cfr.out["ests"][[1]]
D.1 = unname(data[1:total_time, "D"])
D.2 = unname(data[(total_time+1):(total_time*2), "D"])
R.1 = unname(data[1:total_time, "R"])
R.2 = unname(data[(total_time+1):(total_time*2), "R"])
N.1 = unname(data[1:total_time, "N"])
N.2 = unname(data[(total_time+1):(total_time*2), "N"])
if(COUNTRY1==COUNTRY2) {
print("Country")
print(COUNTRY1)
print(cfr.out["EMconv"])
abs.cfr = cfr.out["EM.rel.cfr"][[1]]
print("Absolute CFR")
print(abs.cfr)
} else {
naive = round(sum(D.2)*sum(N.1)/sum(N.2)/sum(D.1),2)
observed = round(sum(D.2)*sum(D.1+R.1)/sum(D.2+R.2)/sum(D.1),2)
reich = round(cfr.out["EM.rel.cfr"][[1]],2)
print(paste("CFR of",COUNTRY2,"compared to",COUNTRY1,"| Naive:", naive,"Observed:", observed,"Reich:",reich))
}
multireturn = list("naive"=naive,"obs"=observed,"reich"=reich)
}
rm(list = ls())
out = relative_cfr("Korea, South","Germany",MAXITERS=50)
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
N.1
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
data
N.1
N.2
N.1
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
N.1
N.1>min.cases
min.cases
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
out
out["naive"]
out["naive"][[1]]
is.nan(NA)
is.nan(NaN)
NA == NA
(NA == NA)
is.na(NA)
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
help tryCatch()
help tryCatch
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
data
plot(c(1,2,3,4,5))
plot(c(1,2,NA,4,5))
plot(c(1,2,NA,4,5))
plot(c(1,2,NA,4,5),type="l")
plot(c(1,2,3,4,5),type="l")
plot(c(NA,2,3,4,5),type="l")
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
plot(reich)
dim(reich)
length(reich)
plot(1:90,reich)
plot(1:90,reich,type="l")
plot(1:90,reich,type="l")
library(ggplot2)
theme_set(theme_minimal())
df = data.frame(time=c(1:90),naive=naive,obs=obs,reich=reich)
df
tail(df)
naive
obs
reich
dim(naive)
length(naive)
length(reicH)
length(reich)
type(reich)
unlist(reich)
df = data.frame(time=c(1:90),naive=unlist(naive),obs=unlist(obs),reich=unlist(reich))
df
df = data.frame(time=c(1:90),naive=unlist(naive),obs=unlist(obs),reich=unlist(reich))
ggplot(df, aes(x=time)) + geom_line(aes(y=reich),color="darkred") + geom_line(aes(y=obs), color="steelblue") + geom_line(aes(y=naive),color="seashell")
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
ggplot(df, aes(x=time)) + geom_line(aes(y=reich),color="darkred") + geom_line(aes(y=obs), color="steelblue") + geom_line(aes(y=naive),color="seagreen")
df = data.frame(time=c(1:end),naive=unlist(naive),obs=unlist(obs),reich=unlist(reich))
ggplot(df, aes(x=time)) + geom_line(aes(y=reich),color="darkred") + geom_line(aes(y=obs), color="steelblue") + geom_line(aes(y=naive),color="seagreen")
ggplot(df, aes(x=time)) + geom_line(aes(y=reich),color="darkred") + geom_line(aes(y=obs), color="steelblue") + geom_line(aes(y=naive),color="seagreen") + xlabel("Days Since January 29, 2020") + ylabel("Relative CFR")
ggplot(df, aes(x=time)) + geom_line(aes(y=reich),color="darkred") + geom_line(aes(y=obs), color="steelblue") + geom_line(aes(y=naive),color="seagreen") + labs(x="Days Since January 29, 2020",y="Relative CFR")
ggsave(paste0(COUNTRY1,COUNTRY2,".svg"),device="svg")
COUNTRY1 = "Korea, South"
COUNTRY2 = "Germany"
ggsave(paste0(COUNTRY1,COUNTRY2,".svg"),device="svg")
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
naive
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
jh_mat
ts1
ts2
ts1-ts2
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/R/generate_coronamat.R')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
naive
observed
reih
sum(D.1)
sum(D.1)
sum(R.1)
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
nc1
nc2
naive
observed
oc1
oc2
ggplot(df, aes(x=time)) + geom_line(aes(y=reich),color="darkred") + geom_line(aes(y=obs), color="steelblue") + geom_line(aes(y=naive),color="seagreen") + labs(x="Days Since January 29, 2020",y="Relative CFR") + guide_legend()
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
ggplot(df, aes(x=time)) + geom_line(aes(y=reich,color="Reich")) +
geom_line(aes(y=obs,color="Obs")) + geom_line(aes(y=naive,color="Naive")) +
labs(x="Days Since January 29, 2020",y="Relative CFR") +
scale_colour_manual(name="Line Color", values=c(Reich="darkred", Naive="steelblue", Obs="seagreen"))
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
allones=rep(1.0,end)
df = data.frame(time=c(1:end),naive=unlist(naive),obs=unlist(obs),reich=unlist(reich),ones=unlist(allones))
ggplot(df, aes(x=time)) + geom_line(aes(y=reich,color="Reich")) +
geom_line(aes(y=obs,color="Obs")) + geom_line(aes(y=naive,color="Naive")) +
geom_line(aes(y=ones,color="One")) +  labs(x="Days Since January 29, 2020",y="Relative CFR") +
scale_colour_manual(name="Estimator", values=c(Reich="darkred", Naive="steelblue", Obs="seagreen",One="gold1"))
ggplot(df, aes(x=time)) + geom_line(aes(y=reich,color="Reich")) +
geom_line(aes(y=obs,color="Obs")) + geom_line(aes(y=naive,color="Naive")) +
geom_line(aes(y=ones,color="1.0")) +  labs(x="Days Since January 29, 2020",y="Relative CFR") +
scale_colour_manual(name="Estimator", values=c(Reich="darkred", Naive="steelblue", Obs="seagreen",1.0="gold1"))
ggplot(df, aes(x=time)) + geom_line(aes(y=reich,color="Reich")) +
geom_line(aes(y=obs,color="Obs")) + geom_line(aes(y=naive,color="Naive")) +
geom_line(aes(y=ones,color="gold1")) +  labs(x="Days Since January 29, 2020",y="Relative CFR") +
scale_colour_manual(name="Estimator", values=c(Reich="darkred", Naive="steelblue", Obs="seagreen"))
ggplot(df, aes(x=time)) + geom_line(aes(y=reich,color="Reich")) +
geom_line(aes(y=obs,color="Obs")) + geom_line(aes(y=naive,color="Naive")) +
geom_line(aes(y=ones)) +  labs(x="Days Since January 29, 2020",y="Relative CFR") +
scale_colour_manual(name="Estimator", values=c(Reich="darkred", Naive="steelblue", Obs="seagreen"))
ggplot(df, aes(x=time)) + geom_line(aes(y=reich,color="Reich")) +
geom_line(aes(y=obs,color="Obs")) + geom_line(aes(y=naive,color="Naive")) +
geom_line(aes(y=ones),color="gold1") +  labs(x="Days Since January 29, 2020",y="Relative CFR") +
scale_colour_manual(name="Estimator", values=c(Reich="darkred", Naive="steelblue", Obs="seagreen"))
ggplot(df, aes(x=time)) + geom_line(aes(y=reich,color="Reich")) +
geom_line(aes(y=obs,color="Obs")) + geom_line(aes(y=naive,color="Naive")) +
geom_line(aes(y=ones),color="gold4") +  labs(x="Days Since January 29, 2020",y="Relative CFR") +
scale_colour_manual(name="Estimator", values=c(Reich="darkred", Naive="steelblue", Obs="seagreen"))
ggplot(df, aes(x=time)) + geom_line(aes(y=reich,color="Reich")) +
geom_line(aes(y=obs,color="Obs")) + geom_line(aes(y=naive,color="Naive")) +
geom_line(aes(y=ones),color="coral") +  labs(x="Days Since January 29, 2020",y="Relative CFR") +
scale_colour_manual(name="Estimator", values=c(Reich="darkred", Naive="steelblue", Obs="seagreen"))
ggsave(paste0(COUNTRY1,COUNTRY2,".svg"),device="svg")
ggplot(df, aes(x=time)) + geom_line(aes(y=reich,color="Reich")) +
geom_ribbon(aes(ymin = reich-0.05, ymax = reich+0.05), alpha = 0.5,
fill = "darkred", color = "transparent") +
geom_line(aes(y=obs,color="Obs")) + geom_line(aes(y=naive,color="Naive")) +
geom_line(aes(y=ones),color="coral") +  labs(x="Days Since January 29, 2020",y="Relative CFR") +
scale_colour_manual(name="Estimator", values=c(Reich="darkred", Naive="steelblue", Obs="seagreen"))
ggplot(df, aes(x=time)) + geom_line(aes(y=reich,color="Reich")) +
geom_ribbon(aes(ymin = reich-0.2, ymax = reich+0.2), alpha = 0.5,
fill = "darkred", color = "transparent") +
geom_line(aes(y=obs,color="Obs")) + geom_line(aes(y=naive,color="Naive")) +
geom_line(aes(y=ones),color="coral") +  labs(x="Days Since January 29, 2020",y="Relative CFR") +
scale_colour_manual(name="Estimator", values=c(Reich="darkred", Naive="steelblue", Obs="seagreen"))
ggplot(df, aes(x=time)) + geom_line(aes(y=reich,color="Reich")) +
geom_ribbon(aes(ymin = reich-0.2, ymax = reich+0.2), alpha = 0.3,
fill = "darkred", color = "transparent") +
geom_line(aes(y=obs,color="Obs")) + geom_line(aes(y=naive,color="Naive")) +
geom_line(aes(y=ones),color="coral") +  labs(x="Days Since January 29, 2020",y="Relative CFR") +
scale_colour_manual(name="Estimator", values=c(Reich="darkred", Naive="steelblue", Obs="seagreen"))
ggsave(paste0(COUNTRY1,COUNTRY2,".svg"),device="svg")
ggplot(df, aes(x=time)) + geom_line(aes(y=reich,color="Reich")) +
geom_ribbon(aes(ymin = reich-0.3, ymax = reich+0.3), alpha = 0.3,
fill = "darkred", color = "transparent") +
geom_line(aes(y=obs,color="Obs")) + geom_line(aes(y=naive,color="Naive")) +
geom_line(aes(y=ones),color="coral") +  labs(x="Days Since January 29, 2020",y="Relative CFR") +
scale_colour_manual(name="Estimator", values=c(Reich="darkred", Naive="steelblue", Obs="seagreen"))
ggsave(paste0(COUNTRY1,COUNTRY2,".svg"),device="svg")
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
ggplot(df, aes(x=time)) + geom_line(aes(y=reich,color="Reich")) +
geom_ribbon(aes(ymin = reich-0.3, ymax = reich+0.3), alpha = 0.3,
fill = "darkred", color = "transparent") +
geom_line(aes(y=obs,color="Obs")) + geom_line(aes(y=naive,color="Naive")) +
geom_line(aes(y=ones),color="coral") +  labs(x="Days Since January 29, 2020",y="Relative CFR") +
scale_colour_manual(name="Estimator", values=c(Reich="darkred", Naive="steelblue", Obs="seagreen"))
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
jh_mat
tail(jh_mat)
jh_mat
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
data
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
1/7.5
1/7.54
1/1.85
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
ggplot(df, aes(x=time)) + geom_line(aes(y=reich,color="Reich")) +
geom_ribbon(aes(ymin = reich-0.3, ymax = reich+0.3), alpha = 0.3,
fill = "darkred", color = "transparent") +
geom_line(aes(y=obs,color="Obs")) + geom_line(aes(y=naive,color="Naive")) +
geom_line(aes(y=ones),color="coral") +  labs(x="Days Since January 29, 2020",y="Relative CFR") +
scale_colour_manual(name="Estimator", values=c(Reich="darkred", Naive="steelblue", Obs="seagreen"))
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
ggplot(df, aes(x=time)) + geom_line(aes(y=reich,color="Reich")) +
geom_ribbon(aes(ymin = reich-0.3, ymax = reich+0.3), alpha = 0.3,
fill = "darkred", color = "transparent") +
geom_line(aes(y=obs,color="Obs")) + geom_line(aes(y=naive,color="Naive")) +
geom_line(aes(y=ones),color="coral") +  labs(x="Days Since January 29, 2020",y="Relative CFR") +
scale_colour_manual(name="Estimator", values=c(Reich="darkred", Naive="steelblue", Obs="seagreen"))
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
ggplot(df, aes(x=time)) + geom_line(aes(y=reich,color="Reich")) +
geom_ribbon(aes(ymin = reich-0.3, ymax = reich+0.3), alpha = 0.3,
fill = "darkred", color = "transparent") +
geom_line(aes(y=obs,color="Obs")) + geom_line(aes(y=naive,color="Naive")) +
geom_line(aes(y=ones),color="coral") +  labs(x="Days Since January 29, 2020",y="Relative CFR") +
scale_colour_manual(name="Estimator", values=c(Reich="darkred", Naive="steelblue", Obs="seagreen"))
ggplot(df, aes(x=time)) + geom_line(aes(y=reich,color="Reich")) +
geom_ribbon(aes(ymin = reich-0.3, ymax = reich+0.3), alpha = 0.3,
fill = "darkred", color = "transparent") +
geom_line(aes(y=obs,color="Obs")) + geom_line(aes(y=naive,color="Naive")) +
geom_line(aes(y=ones),color="coral") +  labs(x="Days Since January 29, 2020",y="Relative CFR") +
scale_colour_manual(name="Estimator", values=c(Reich="darkred", Naive="steelblue", Obs="seagreen"))
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
max(reich)
max(naive)
max(obs)
min(10,NA)
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
ggplot(df, aes(x=time)) + geom_line(aes(y=reich),color="darkred") +
geom_ribbon(aes(ymin = reich-0.3, ymax = reich+0.3), alpha = 0.3,
fill = "darkred", color = "transparent") +
geom_line(aes(y=obs),clor="steelblue") + geom_line(aes(y=naive),color="seagreen") +
geom_line(aes(y=ones),color="coral") +  labs(x="Days Since January 29, 2020",y="Relative CFR") +
xlim(start,end) + ylim(0,min(ymax,max(reich,naive,obs)))
ggplot(df, aes(x=time)) + geom_line(aes(y=reich),color="darkred") +
geom_ribbon(aes(ymin = reich-0.3, ymax = reich+0.3), alpha = 0.3,
fill = "darkred", color = "transparent") +
geom_line(aes(y=obs),clor="steelblue") + geom_line(aes(y=naive),color="seagreen") +
geom_line(aes(y=ones),color="coral") +  labs(x="Days Since January 29, 2020",y="Relative CFR") +
xlim(start,end) + ylim(0,min(ymax,max(max(reich),max(naive),max(obs))))
ggplot(df, aes(x=time)) + geom_line(aes(y=reich),color="darkred") +
geom_ribbon(aes(ymin = reich-0.3, ymax = reich+0.3), alpha = 0.3,
fill = "darkred", color = "transparent") +
geom_line(aes(y=obs),color="steelblue") + geom_line(aes(y=naive),color="seagreen") +
geom_line(aes(y=ones),color="coral") +  labs(x="Days Since January 29, 2020",y="Relative CFR") +
xlim(start,end) + ylim(0,min(ymax,max(max(reich),max(naive),max(obs))))
max(reich)
reich
ggplot(df, aes(x=time)) + geom_line(aes(y=reich),color="darkred") +
geom_ribbon(aes(ymin = reich-0.3, ymax = reich+0.3), alpha = 0.3,
fill = "darkred", color = "transparent") +
geom_line(aes(y=obs),color="steelblue") + geom_line(aes(y=naive),color="seagreen") +
geom_line(aes(y=ones),color="coral") +  labs(x="Days Since January 29, 2020",y="Relative CFR") +
xlim(start,end) + ylim(0,min(ymax,max(max(unlist(reich)),max(unlist(naive)),max(unlist(obs)))))
end = 86
ggplot(df, aes(x=time)) + geom_line(aes(y=reich),color="darkred") +
geom_ribbon(aes(ymin = reich-0.3, ymax = reich+0.3), alpha = 0.3,
fill = "darkred", color = "transparent") +
geom_line(aes(y=obs),color="steelblue") + geom_line(aes(y=naive),color="seagreen") +
geom_line(aes(y=ones),color="coral") +  labs(x="Days Since January 29, 2020",y="Relative CFR") +
xlim(start,end) + ylim(0,min(ymax,max(max(unlist(reich)),max(unlist(naive)),max(unlist(obs)))))
start = 83#70#42
end = 86
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
data
D.1
D.1
D.2
D.1
D.2
D.1
D.1
D.2
D.1
D.2
N.1
N.2
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
jh_mat
View(jh_mat)
View(jh_mat)
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
ttotal
jh_mat
View(jh_mat)
View(jh_mat)
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
D.1
D.2
D.1==D.2
N.1==N.2
NA["EM"]
NA["EM"][[1]]
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
cfr.out
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
reich
naive
observed
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
c(c(1,2),c(3,4))
c([1,2],[3,4])
L1 = rep(NA,20)
L2 = rep(50,20)
min(35,max(max(unlist(L1)),max(unlist(L2))))
min(35,max(max(unlist(L1[L1!=NA])),max(unlist(L2[L2!=NA]))))
min(35,max(max(unlist(L1[L1!=NA])),max(unlist(L2[L2!=NA]))))
max(unlist(L1[L1!=NA]))
unlist(L1[L1!=NA])
L1[1]=10
L1
unlist(L1[L1!=NA])
unlist(L1[L1!=NA])
L1
unlist(L1[L1==NA])
unlist(L1[!is.na(L1)])
max(unlist(unlist(L1[!is.na(L1)])))
min(35,max(max(unlist(L1[!is.na(L1)])),max(unlist(L2[!is.na(L2)]))))
min(35,max(max(unlist(L1[!is.na(L1)])),max(unlist(L2[!is.na(L2)]))))
L2
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
library("parallel")
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
Rscript
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/generate_cfr_data.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/generate_cfr_data.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/main.r')
df = read.csv(file=paste0("./plots/","Korea, South","Austria",".csv"),header=TRUE)
plot_cfr_timeseries(df)
plot_cfr_timeseries <- function(df,ymax=30.0) {
library("ggplot2")
COUNTRY1 = df["COUNTRY1"][[1]]
COUNTRY2 = df["COUNTRY2"][[1]]
ggplot(df, aes(x=time)) + geom_line(aes(y=reich),color="darkred") +
geom_ribbon(aes(ymin = reich-0.3, ymax = reich+0.3), alpha = 0.3,
fill = "darkred", color = "transparent") +
geom_line(aes(y=obs),color="steelblue") + geom_line(aes(y=naive),color="seagreen") +
geom_line(aes(y=ones),color="coral") +  labs(y=paste0(COUNTRY2,"/",COUNTRY1)) +
xlim(start,end) + coord_cartesian(ylim=c(0,min(ymax,max(max(unlist(reich[!is.na(reich)])),max(unlist(naive[!is.na(naive)])),max(unlist(obs[!is.na(obs)])))))) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank())
ggsave(paste0("./plots/",COUNTRY1,COUNTRY2,".pdf"),device="pdf",width=10,height=5,units="cm")
}
plot_cfr_timeseries(df)
plot_cfr_timeseries <- function(df,ymax=30.0) {
library("ggplot2")
COUNTRY1 = df["COUNTRY1"][[1]]
COUNTRY2 = df["COUNTRY2"][[1]]
reich = df["reich"]
naive = df["naive"]
obs = df["obs"]
ggplot(df, aes(x=time)) + geom_line(aes(y=reich),color="darkred") +
geom_ribbon(aes(ymin = reich-0.3, ymax = reich+0.3), alpha = 0.3,
fill = "darkred", color = "transparent") +
geom_line(aes(y=obs),color="steelblue") + geom_line(aes(y=naive),color="seagreen") +
geom_line(aes(y=ones),color="coral") +  labs(y=paste0(COUNTRY2,"/",COUNTRY1)) +
xlim(start,end) + coord_cartesian(ylim=c(0,min(ymax,max(max(unlist(reich[!is.na(reich)])),max(unlist(naive[!is.na(naive)])),max(unlist(obs[!is.na(obs)])))))) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank())
ggsave(paste0("./plots/",COUNTRY1,COUNTRY2,".pdf"),device="pdf",width=10,height=5,units="cm")
}
plot_cfr_timeseries(df)
source("./generate_cfr_data.r")
df = generate_cfr_data("Turkey","Iran",start=70,end=86,maxiters=2000)
df = generate_cfr_data("Belgium","Iran",start=70,end=86,maxiters=2000)
source("./plot_cfr_timeseries.r")
plot_cfr_timeseries(df,70,86)
