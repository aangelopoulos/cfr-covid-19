offset=log(dat[,"N"]), family=poisson)
unadj.glm.fit
exp(coef(unadj.glm.fit))
exp(coef(unadj.glm.fit))[length(coef())]
idx.to.reconstruct
full.dat
full.data
assumed.nu
nu.idx
length(assumed.nu)
nu.idx
N.1
N.idx
t
t-nlag
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
N.idx
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
data
debugSource('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
debugSource('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
data[1:L,"new.times"]
!is.na(data[1:L,"new.times"])
all(!is.na(data[1:L,"new.times"]))
all(!is.na(data[1:L,"new.times"]))
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
padarray(data, padsize, padval=0, direction=c("both", "pre", "post"))
padarray
padzeros
data2 = rbind(data,data)
data2
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/R/generate_coronamat.R')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
c1
c2
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
confirmed
jh_data
jh_mat
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
confirmed
jh_data
jh_data
jh_mat
jh_mat[,"time"]+L
jh_mat[,"time"]+10
time_orig = dim(jh_mat)[1]/2
time_orig
jh_mat[1:time_orig,]
jh_mat[1:(time_orig+1),]
jh_mat[1:(time_orig),]
r(1,1,1)
cbind(c(1,1,1),c(1,1,1))
jh_mat
jh_mat
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/R/generate_coronamat.R')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
rbind(z1,c1,z2,c2)
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
jh_mat
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
N.idx
N.idx
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
N.idx
t
idx.to.reconstruct
full.data
N.1
N.1[N.idx]
t
times.to.reconstruct
data
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
full.data
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/R/generate_coronamat.R')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
jh_mat
c1
c2
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
jh_mat
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
jh_mat
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/R/generate_coronamat.R')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/R/generate_coronamat.R')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
jh_mat
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
jh_mat
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
z1
z2
c1
z1
z2
c2
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
jh_mat
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
N.idx
full.data
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
debugSource('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
data
debugSource('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
debugSource('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
N.1
n2mfrow()
N.1
debugSource('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
N.1
N.2
debugSource('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
data
debugSource('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
debugSource('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
data
data
debugSource('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
jh_mat
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
jh_mat
jh_mat
rbind(jh_mat,jh_mat)
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
jh_mat
N.1
D.1
D.1[-1]
D.1[length(D.1)]
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
last.t = out_list["last.t"][[1]]
rm(list = ls())
library("dplyr")
library("RcppCNPy")
source("./reich/CFR_estimation.R")
source("./R/jh_process.R")
source("./R/generate_coronamat.R")
source("./reindex_time.R")
# Parameters
DESIRED_L = 20 # Length of the tail of the death distribution, in days. For all results paper, this was 20.
MTTD = 14 # Mean Time To Death
COUNTRY1 = "Iran"
COUNTRY2 = "Iran"
set.seed(0) #For reproducibility. Can be changed without affecting anything.
min.cases <- 100
# Changing the distribution of deaths can have a large effect especially in the low data regime.
assumed.nu=pnorm(1:DESIRED_L,mean=MTTD,sd=8.0)
#assumed.nu = c(rep(0,4),rep(1,14),rep(0,2))
assumed.nu = assumed.nu/sum(assumed.nu)
data = generate_coronamat(COUNTRY1,COUNTRY2,DESIRED_L+2)
# This code fixes some errors in the JHU dataset (negative entries, all-zero rows).
data = reindex_time(data,DESIRED_L)["data"][[1]]
data = data[ ((data[,"N"] > 0) | is.na(data[,"new.times"])) & (data[,"D"]>=0),  ]
data = data[,-6]
out_list = reindex_time(data,DESIRED_L)
data = out_list["data"][[1]]
T = out_list["T"][[1]]
first.t = out_list["first.t"][[1]]
last.t = out_list["last.t"][[1]]
total_time = dim(data)[1]/2
alpha.start <- runif(T-1)
## caution! this next line may take several minutes (5-10, depanding on
## the speed of your machine) to run.
cfr.out <- EMforCFR(assumed.nu = assumed.nu,
alpha.start.values = alpha.start,
full.data = data,
verb = FALSE,
SEM.var = TRUE,
max.iter = 10,
tol = 1e-04)
theta <- cfr.out["ests"][[1]]
D.1 = unname(data[1:total_time, "D"])
D.2 = unname(data[(total_time+1):(total_time*2), "D"])
R.1 = unname(data[1:total_time, "R"])
R.2 = unname(data[(total_time+1):(total_time*2), "R"])
N.1 = unname(data[1:total_time, "N"])
N.2 = unname(data[(total_time+1):(total_time*2), "N"])
print(cfr.out["EMconv"])
print(cfr.out["EM.rel.cfr"])
theta <- cfr.out["ests"][[1]]
M.1 = unname(N.1[first.t:(first.t+T-1)])
M.2 = unname(N.2[first.t:(first.t+T-1)])
get_d <- function(theta,t,j,Nj) {
x <- theta[1]
if(j == 2) {
x <- x + theta[length(theta)]
}
if(t >= 2) {
x <- x + theta[t]
}
return(Nj[t] * exp(x))
}
TIMESTEP = total_time
cfr_ave <- (get_d(theta,TIMESTEP,2,M.2) + get_d(theta,TIMESTEP,1,M.1))/(M.2[TIMESTEP]+M.1[TIMESTEP])
cfr_ave
theta
get_d(theta,TIMESTEP)
get_d(theta,TIMESTEP,2,M.2)
theta[1]
theta[TIMESTEP]
theta
TIMEstEP
TIMESTEP
T
theta[T]
theta
theta[T]
length(theta)
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
cfr_ave
get_d(theta,TIMESTEP,2,M.2)
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
cfr_ave
theta
theta[1]
theta[length(theta)]
theta[t]
theta[T]
M.2[T]
theta[length(theta)]
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
cfr_ave
get_d(theta,TIMESTEP,2,M.2)
beta = 4.0 # Serial interval
gamma = 1/14 # Clearing interval
abs_cfr = 1/1000
T = 60
psi = rep(1.0,T) #Reporting rates
phi = rep(1.0,T)
S = 1000000
I = 1
R = 0
sir_step <- function(S,I,R,beta,gamma) {
Sn = (-beta*S*I)+S
In = (beta*S*I-gamma*I)+I
Rn = (gamma*I)+R
c(Sn,In,Rn)
}
for (t in 1:T) {
SIR = sir_step(S,I,R)
dI = SIR[2]-I
dR = SIR[3]-R
I = SIR[2]
R = SIR[3]
}
beta = 4.0 # Serial interval
gamma = 1/14 # Clearing interval
abs_cfr = 1/1000
T = 60
psi = rep(1.0,T) #Reporting rates
phi = rep(1.0,T)
S = 1000000
I = 1
R = 0
sir_step <- function(S,I,R,beta,gamma) {
Sn = (-beta*S*I)+S
In = (beta*S*I-gamma*I)+I
Rn = (gamma*I)+R
c(Sn,In,Rn)
}
for (t in 1:T) {
SIR = sir_step(S,I,R,beta,gamma)
dI = SIR[2]-I
dR = SIR[3]-R
I = SIR[2]
R = SIR[3]
}
T
I
R
debugSource('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/R/simulate_reference_distribution.R')
S
I
R
Sn
beta
S
I
debugSource('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/R/simulate_reference_distribution.R')
debugSource('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/R/simulate_reference_distribution.R')
I
R
debugSource('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/R/simulate_reference_distribution.R')
0.15*(1000000)/14
0.15*(5)/14
0.15*(4)/14
0.15*(20)/14
0.15*(30)/14
0.15*(20)/14
debugSource('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/R/simulate_reference_distribution.R')
Sn
S
Sn
In
Rn
debugSource('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/R/simulate_reference_distribution.R')
I
debugSource('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/R/simulate_reference_distribution.R')
debugSource('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/R/simulate_reference_distribution.R')
debugSource('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/R/simulate_reference_distribution.R')
debugSource('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/R/simulate_reference_distribution.R')
S
I
R
Sn
In
Rn
debugSource('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/R/simulate_reference_distribution.R')
floor(-beta*S*I)
debugSource('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/R/simulate_reference_distribution.R')
rbinom
rbinom(1,100,5)
rbinom(1,100,0.1)
rbinom(1,100,0.1)
rbinom(1,100,0.1)
rbinom(1,100,0.1)
rbinom(1,100,0.1)
rbinom(1,100,0.1)
rbinom(1,100,0.1)
rbinom(1,100,0.1)
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/R/simulate_reference_distribution.R')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/R/simulate_reference_distribution.R')
debugSource('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/R/simulate_reference_distribution.R')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/R/simulate_reference_distribution.R')
warnings()
abs_cfr
dR
arrN
rbinom(1,dR,abs_cfr)
rbinom(1,dR,abs_cfr)
rbinom
rbinom(1,4000,0.1)
dR
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/R/simulate_reference_distribution.R')
arrD
arrR
arrN
S
arrN
arrD
arrR
c(arrN,arrD,arrR)
arrN.T
transpose
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
ref
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
country2table
country2table[,"grp"]=1
country2table[,"Country.Region"]=1
country2table
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
arrayInd()
arrD
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
length(arrD)
length(result[,"D"])
result
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
data
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
dat
data
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
data
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
assumed.nu
assumed.nu[assumed.nu < 1e-3] = 0
assumed.nu
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
51*0.16
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/R/simulate_reference_distribution.R')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
0.16*51
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
0.16*51
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
US
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
0.03*85
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
assumed.nu
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
assumed.nu
debugSource('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
debugSource('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
assumed.nu
pnorm(1:DESIRED_L,mean=MTTD,sd=0.1)
debugSource('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
assumed.nu
debugSource('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
assumed.nu
pnorm(1,mean=14,sd=0)
pnorm(1,mean=14,sd=1)
pnorm(14,mean=14,sd=1)
pnorm(15,mean=14,sd=1)
pnorm(15,mean=14,sd=1)
pnorm(20,mean=14,sd=1)
dnorm(20,mean=14,sd=1)
dnorm(14,mean=14,sd=1)
debugSource('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
assumed.nu
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/reich/CFR_estimation.R')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
assumed.nu
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
data
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
data
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
abs.cfr
abs.cfr[1]
abs.cfr[[1]]
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
source('~/Code/Berkeley/COVID-19-Projects/cfr-covid-19/relative_cfr.r')
